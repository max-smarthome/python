"""
Задание 1.

Приведен код, который позволяет сохранить в
массиве индексы четных элементов другого массива

Сделайте замеры времени выполнения кода с помощью модуля timeit

Попробуйте оптимизировать код, чтобы снизить время выполнения
Проведите повторные замеры

Добавьте аналитику: что вы сделали и почему
"""
import timeit


def func_1(nums):
    new_arr = []
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            new_arr.append(i)
    return new_arr


n = [i for i in range(1000000)]
print(timeit.timeit("func_1(n)", setup="from __main__ import func_1, n", number=100))

'''Время выполнения на 10000 элементов 0.16698690000000016'''
'''Время выполнения на 1000000 элементов 14.7014319'''


def func_2(nums):
    return [i for i in range(len(nums)) if nums[i] % 2 == 0]


print(timeit.timeit("func_2(n)", setup="from __main__ import func_2, n", number=100))

'''Время выполнения на 10000 элементов 0.1406860000000001'''
'''Время выполнения на 1000000 элементов 10.202325299999998'''


'''Хотя сложность обоих циклов одинаковая(O(n)), однако генераторные выражения выполняются быстрее, чем циклы.
И если на малом размере списка это почти не заметно, то при больших объемах разница становится существенной
'''
